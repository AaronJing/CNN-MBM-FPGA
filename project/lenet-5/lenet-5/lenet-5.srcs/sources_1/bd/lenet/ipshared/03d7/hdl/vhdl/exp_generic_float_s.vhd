-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity exp_generic_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of exp_generic_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv15_4000 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv46_B17217F7D : STD_LOGIC_VECTOR (45 downto 0) := "0000000000101100010111001000010111111101111101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv28_4 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_382 : STD_LOGIC_VECTOR (9 downto 0) := "1110000010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_7F800000 : STD_LOGIC_VECTOR (31 downto 0) := "01111111100000000000000000000000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv25_B8A : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000101110001010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0_flag00000000 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_flag00011001 : BOOLEAN;
    signal hls_exp_reduce_a_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal hls_exp_reduce_a_1_ce0 : STD_LOGIC;
    signal hls_exp_reduce_a_1_q0 : STD_LOGIC_VECTOR (26 downto 0);
    signal hls_exp_reduce_a_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal hls_exp_reduce_a_ce0 : STD_LOGIC;
    signal hls_exp_reduce_a_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_186_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_925 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_p_Result_s_reg_925 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_p_Result_s_reg_925 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_p_Result_s_reg_925 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_p_Result_s_reg_925 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_p_Result_s_reg_925 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_demorgan_reg_932 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_not_demorgan_reg_932 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_not_demorgan_reg_932 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_not_demorgan_reg_932 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_not_demorgan_reg_932 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_i_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_i_reg_938 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_tmp_4_i_i_reg_938 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_4_i_i_reg_938 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_4_i_i_reg_938 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_4_i_i_reg_938 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_4_i_i_reg_938 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_25_cast1_fu_278_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_25_cast1_reg_945 : STD_LOGIC_VECTOR (35 downto 0);
    signal isNeg_fu_282_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_950 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_1_cast_fu_308_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_1_cast_reg_955 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_9_fu_336_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_9_reg_961 : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_reg_pp0_iter1_p_Val2_9_reg_961 : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_reg_pp0_iter2_p_Val2_9_reg_961 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_1_reg_966 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_972 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_36_reg_977 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_982 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_tmp_20_reg_982 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_20_reg_982 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_20_reg_982 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_20_reg_982 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_990 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_tmp_42_reg_990 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_42_reg_990 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_42_reg_990 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_42_reg_990 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_42_reg_990 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_3_fu_447_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_3_reg_996 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter2_r_exp_V_3_reg_996 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter3_r_exp_V_3_reg_996 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter4_r_exp_V_3_reg_996 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_21_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_reg_1003 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_21_reg_1003 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_21_reg_1003 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_21_reg_1003 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_reg_1008 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_15_fu_524_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_15_reg_1013 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_6_fu_585_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_6_reg_1028 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_Val2_1_fu_919_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_1_reg_1033 : STD_LOGIC_VECTOR (35 downto 0);
    signal sel_tmp1_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_reg_1038 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp10_reg_1044 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp18_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp18_reg_1050 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_804_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_reg_1055 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_flag00011011 : BOOLEAN;
    signal tmp_16_fu_528_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i1_fu_543_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_182_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_fu_194_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_1_fu_204_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_i_i_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_i_i_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_i_i_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_cast_fu_238_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_5_fu_248_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_7_fu_256_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_8_fu_262_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_18_fu_270_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal m_exp_fu_242_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_fu_290_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_cast_fu_296_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_fu_300_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_cast_cas_fu_312_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_5_fu_320_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_9_fu_316_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_5_cast_fu_326_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_6_fu_330_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal tmp_s_fu_397_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_908_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_38_fu_424_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_4_fu_408_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_10_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_2_fu_433_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_37_fu_417_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_439_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_fu_386_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_390_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_455_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_462_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_2_fu_478_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_2_fu_478_p2 : STD_LOGIC_VECTOR (45 downto 0);
    signal tmp_15_fu_497_p3 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_13_fu_494_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_21_cast_fu_504_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal p_Val2_5_fu_508_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal m_diff_hi_V_fu_514_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal Z2_ind_V_fu_533_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_i_fu_548_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_7_i_fu_551_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_4_fu_555_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_18_fu_581_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_17_fu_571_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_Z1P_m_1_V_fu_561_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_19_fu_604_p3 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_28_cast_fu_611_p1 : STD_LOGIC_VECTOR (44 downto 0);
    signal p_Val2_10_fu_614_p2 : STD_LOGIC_VECTOR (44 downto 0);
    signal tmp_40_fu_620_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_fu_628_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_exp_V_2_fu_633_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_41_fu_640_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_667_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_24_fu_677_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_43_fu_695_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_exp_V_fu_699_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_2_fu_687_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal not_Result_i4_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp44_demorgan_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp15_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_6_fu_705_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp2_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_799_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_791_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_787_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_is_ninf_fu_812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_i_not_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp15_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp16_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp11_fu_858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_868_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp16_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_882_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_908_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Val2_1_fu_919_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_1_fu_919_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to5 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal p_Val2_1_fu_919_p00 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_1_fu_919_p10 : STD_LOGIC_VECTOR (35 downto 0);

    component c1_mac_muladd_13ndEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component c1_mul_mul_18ns_1eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;


    component exp_generic_floatbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component exp_generic_floatcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    hls_exp_reduce_a_1_U : component exp_generic_floatbkb
    generic map (
        DataWidth => 27,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_exp_reduce_a_1_address0,
        ce0 => hls_exp_reduce_a_1_ce0,
        q0 => hls_exp_reduce_a_1_q0);

    hls_exp_reduce_a_U : component exp_generic_floatcud
    generic map (
        DataWidth => 8,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_exp_reduce_a_address0,
        ce0 => hls_exp_reduce_a_ce0,
        q0 => hls_exp_reduce_a_q0);

    c1_mac_muladd_13ndEe_U0 : component c1_mac_muladd_13ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 13,
        din2_WIDTH => 16,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_908_p0,
        din1 => tmp_7_reg_972,
        din2 => tmp_s_fu_397_p3,
        dout => grp_fu_908_p3);

    c1_mul_mul_18ns_1eOg_U1 : component c1_mul_mul_18ns_1eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 36)
    port map (
        din0 => p_Val2_1_fu_919_p0,
        din1 => p_Val2_1_fu_919_p1,
        dout => p_Val2_1_fu_919_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_flag00011011 = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_not_demorgan_reg_932 <= not_demorgan_reg_932;
                ap_reg_pp0_iter1_p_Result_s_reg_925 <= p_Result_s_reg_925;
                ap_reg_pp0_iter1_p_Val2_9_reg_961 <= p_Val2_9_reg_961;
                ap_reg_pp0_iter1_tmp_20_reg_982 <= tmp_20_reg_982;
                ap_reg_pp0_iter1_tmp_42_reg_990 <= tmp_42_reg_990;
                ap_reg_pp0_iter1_tmp_4_i_i_reg_938 <= tmp_4_i_i_reg_938;
                isNeg_reg_950 <= m_exp_fu_242_p2(8 downto 8);
                not_demorgan_reg_932 <= not_demorgan_fu_220_p2;
                p_Result_s_reg_925 <= p_Val2_s_fu_182_p1(31 downto 31);
                    p_Val2_25_cast1_reg_945(35 downto 4) <= p_Val2_25_cast1_fu_278_p1(35 downto 4);
                p_Val2_9_reg_961 <= p_Val2_9_fu_336_p3;
                r_exp_V_3_reg_996 <= r_exp_V_3_fu_447_p3;
                sh_assign_1_cast_reg_955 <= sh_assign_1_cast_fu_308_p1;
                tmp_1_reg_966 <= p_Val2_9_fu_336_p3(35 downto 4);
                tmp_20_reg_982 <= tmp_20_fu_372_p2;
                tmp_21_reg_1003 <= tmp_21_fu_470_p2;
                tmp_36_reg_977 <= p_Val2_9_fu_336_p3(35 downto 35);
                tmp_42_reg_990 <= p_Val2_8_fu_262_p3(24 downto 24);
                tmp_4_i_i_reg_938 <= tmp_4_i_i_fu_232_p2;
                tmp_7_reg_972 <= p_Val2_9_fu_336_p3(35 downto 23);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0)) then
                ap_reg_pp0_iter2_not_demorgan_reg_932 <= ap_reg_pp0_iter1_not_demorgan_reg_932;
                ap_reg_pp0_iter2_p_Result_s_reg_925 <= ap_reg_pp0_iter1_p_Result_s_reg_925;
                ap_reg_pp0_iter2_p_Val2_9_reg_961 <= ap_reg_pp0_iter1_p_Val2_9_reg_961;
                ap_reg_pp0_iter2_r_exp_V_3_reg_996 <= r_exp_V_3_reg_996;
                ap_reg_pp0_iter2_tmp_20_reg_982 <= ap_reg_pp0_iter1_tmp_20_reg_982;
                ap_reg_pp0_iter2_tmp_21_reg_1003 <= tmp_21_reg_1003;
                ap_reg_pp0_iter2_tmp_42_reg_990 <= ap_reg_pp0_iter1_tmp_42_reg_990;
                ap_reg_pp0_iter2_tmp_4_i_i_reg_938 <= ap_reg_pp0_iter1_tmp_4_i_i_reg_938;
                ap_reg_pp0_iter3_not_demorgan_reg_932 <= ap_reg_pp0_iter2_not_demorgan_reg_932;
                ap_reg_pp0_iter3_p_Result_s_reg_925 <= ap_reg_pp0_iter2_p_Result_s_reg_925;
                ap_reg_pp0_iter3_r_exp_V_3_reg_996 <= ap_reg_pp0_iter2_r_exp_V_3_reg_996;
                ap_reg_pp0_iter3_tmp_20_reg_982 <= ap_reg_pp0_iter2_tmp_20_reg_982;
                ap_reg_pp0_iter3_tmp_21_reg_1003 <= ap_reg_pp0_iter2_tmp_21_reg_1003;
                ap_reg_pp0_iter3_tmp_42_reg_990 <= ap_reg_pp0_iter2_tmp_42_reg_990;
                ap_reg_pp0_iter3_tmp_4_i_i_reg_938 <= ap_reg_pp0_iter2_tmp_4_i_i_reg_938;
                ap_reg_pp0_iter4_not_demorgan_reg_932 <= ap_reg_pp0_iter3_not_demorgan_reg_932;
                ap_reg_pp0_iter4_p_Result_s_reg_925 <= ap_reg_pp0_iter3_p_Result_s_reg_925;
                ap_reg_pp0_iter4_r_exp_V_3_reg_996 <= ap_reg_pp0_iter3_r_exp_V_3_reg_996;
                ap_reg_pp0_iter4_tmp_20_reg_982 <= ap_reg_pp0_iter3_tmp_20_reg_982;
                ap_reg_pp0_iter4_tmp_21_reg_1003 <= ap_reg_pp0_iter3_tmp_21_reg_1003;
                ap_reg_pp0_iter4_tmp_42_reg_990 <= ap_reg_pp0_iter3_tmp_42_reg_990;
                ap_reg_pp0_iter4_tmp_4_i_i_reg_938 <= ap_reg_pp0_iter3_tmp_4_i_i_reg_938;
                ap_reg_pp0_iter5_p_Result_s_reg_925 <= ap_reg_pp0_iter4_p_Result_s_reg_925;
                ap_reg_pp0_iter5_tmp_42_reg_990 <= ap_reg_pp0_iter4_tmp_42_reg_990;
                ap_reg_pp0_iter5_tmp_4_i_i_reg_938 <= ap_reg_pp0_iter4_tmp_4_i_i_reg_938;
                p_Val2_15_reg_1013 <= p_Val2_15_fu_524_p1;
                p_Val2_1_reg_1033 <= p_Val2_1_fu_919_p2;
                p_Val2_6_reg_1028 <= p_Val2_6_fu_585_p2;
                sel_tmp10_reg_1044 <= sel_tmp10_fu_747_p2;
                sel_tmp1_reg_1038 <= sel_tmp1_fu_715_p2;
                tmp18_reg_1050 <= tmp18_fu_781_p2;
                tmp_14_reg_1008 <= p_Val2_2_fu_478_p2(45 downto 10);
                    tmp_28_reg_1055(30 downto 0) <= tmp_28_fu_804_p3(30 downto 0);
            end if;
        end if;
    end process;
    p_Val2_25_cast1_reg_945(3 downto 0) <= "0000";
    tmp_28_reg_1055(31) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_flag00011011, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Z2_ind_V_fu_533_p4 <= p_Val2_5_fu_508_p2(17 downto 13);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0_flag00000000 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_flag00011001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_flag00011001 <= ((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_start));
    end process;


    ap_block_pp0_stage0_flag00011011_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_flag00011011 <= ((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_start));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_const_logic_0 = ap_start);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00000000, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_flag00011001)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_start) and (ap_block_pp0_stage0_flag00000000 = ap_const_boolean_0)) or ((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_idle_pp0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3) and (ap_const_logic_0 = ap_enable_reg_pp0_iter4) and (ap_const_logic_0 = ap_enable_reg_pp0_iter5) and (ap_const_logic_0 = ap_enable_reg_pp0_iter6))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3) and (ap_const_logic_0 = ap_enable_reg_pp0_iter4) and (ap_const_logic_0 = ap_enable_reg_pp0_iter5))) then 
            ap_idle_pp0_0to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_start) and (ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to5)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_idle_pp0_0to5))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        ap_const_lv32_0 when (tmp_32_fu_894_p2(0) = '1') else 
        tmp_31_fu_882_p3;
    exp_Z1P_m_1_V_fu_561_p4 <= p_Val2_4_fu_555_p2(18 downto 1);
    grp_fu_908_p0 <= ap_const_lv25_B8A(13 - 1 downto 0);
    hls_exp_reduce_a_1_address0 <= tmp_16_fu_528_p1(9 - 1 downto 0);

    hls_exp_reduce_a_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            hls_exp_reduce_a_1_ce0 <= ap_const_logic_1;
        else 
            hls_exp_reduce_a_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hls_exp_reduce_a_address0 <= tmp_i1_fu_543_p1(5 - 1 downto 0);

    hls_exp_reduce_a_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_flag00011001)
    begin
        if (((ap_block_pp0_stage0_flag00011001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3))) then 
            hls_exp_reduce_a_ce0 <= ap_const_logic_1;
        else 
            hls_exp_reduce_a_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_fu_650_p2 <= "1" when (signed(tmp_41_fu_640_p4) > signed(ap_const_lv3_0)) else "0";
    isNeg_fu_282_p3 <= m_exp_fu_242_p2(8 downto 8);
    loc_V_1_fu_204_p1 <= p_Val2_s_fu_182_p1(23 - 1 downto 0);
    loc_V_2_fu_687_p3 <= 
        tmp_23_fu_667_p4 when (tmp_40_fu_620_p3(0) = '1') else 
        tmp_24_fu_677_p4;
    loc_V_fu_194_p4 <= p_Val2_s_fu_182_p1(30 downto 23);
    m_diff_hi_V_fu_514_p4 <= p_Val2_5_fu_508_p2(26 downto 18);
    m_exp_fu_242_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_cast_fu_238_p1));
    not_Result_i4_fu_599_p2 <= (ap_reg_pp0_iter4_p_Result_s_reg_925 xor ap_const_lv1_1);
    not_demorgan_fu_220_p2 <= (tmp_i_i_fu_208_p2 and tmp_1_i_i_fu_214_p2);
    or_cond_fu_656_p2 <= (ap_reg_pp0_iter4_tmp_21_reg_1003 or icmp_fu_650_p2);
    out_exp_V_fu_699_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) + unsigned(tmp_43_fu_695_p1));
    p_Result_5_fu_248_p3 <= (ap_const_lv2_1 & loc_V_1_fu_204_p1);
    p_Result_6_fu_705_p4 <= ((ap_const_lv1_0 & out_exp_V_fu_699_p2) & loc_V_2_fu_687_p3);
    p_Result_s_fu_186_p3 <= p_Val2_s_fu_182_p1(31 downto 31);
    p_Val2_10_fu_614_p2 <= std_logic_vector(unsigned(tmp_19_fu_604_p3) + unsigned(tmp_28_cast_fu_611_p1));
    p_Val2_15_fu_524_p1 <= p_Val2_5_fu_508_p2(18 - 1 downto 0);
    p_Val2_18_fu_270_p3 <= (p_Val2_8_fu_262_p3 & ap_const_lv4_0);
    p_Val2_1_fu_919_p0 <= p_Val2_1_fu_919_p00(18 - 1 downto 0);
    p_Val2_1_fu_919_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_V_fu_561_p4),36));
    p_Val2_1_fu_919_p1 <= p_Val2_1_fu_919_p10(18 - 1 downto 0);
    p_Val2_1_fu_919_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_571_p4),36));
        p_Val2_25_cast1_fu_278_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_18_fu_270_p3),36));

    p_Val2_2_fu_478_p1 <= r_exp_V_3_reg_996;
    p_Val2_2_fu_478_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &ap_const_lv46_B17217F7D) * signed(p_Val2_2_fu_478_p1))), 46));
    p_Val2_4_fu_555_p2 <= std_logic_vector(unsigned(tmp_6_i_fu_548_p1) + unsigned(tmp_7_i_fu_551_p1));
    p_Val2_5_fu_508_p2 <= std_logic_vector(signed(tmp_13_fu_494_p1) - signed(tmp_21_cast_fu_504_p1));
    p_Val2_6_fu_585_p2 <= std_logic_vector(unsigned(ap_const_lv28_4) + unsigned(tmp_18_fu_581_p1));
    p_Val2_7_fu_256_p2 <= std_logic_vector(unsigned(ap_const_lv25_0) - unsigned(p_Result_5_fu_248_p3));
    p_Val2_8_fu_262_p3 <= 
        p_Val2_7_fu_256_p2 when (p_Result_s_fu_186_p3(0) = '1') else 
        p_Result_5_fu_248_p3;
    p_Val2_9_fu_336_p3 <= 
        tmp_5_cast_fu_326_p1 when (isNeg_fu_282_p3(0) = '1') else 
        tmp_6_fu_330_p2;
    p_Val2_s_fu_182_p1 <= x;
    p_s_fu_439_p3 <= 
        tmp_4_fu_408_p4 when (tmp_10_fu_427_p2(0) = '1') else 
        ret_V_2_fu_433_p2;
    r_exp_V_2_fu_633_p3 <= 
        ap_reg_pp0_iter4_r_exp_V_3_reg_996 when (tmp_40_fu_620_p3(0) = '1') else 
        r_exp_V_fu_628_p2;
    r_exp_V_3_fu_447_p3 <= 
        p_s_fu_439_p3 when (tmp_37_fu_417_p3(0) = '1') else 
        tmp_4_fu_408_p4;
    r_exp_V_fu_628_p2 <= std_logic_vector(signed(ap_const_lv10_3FF) + signed(ap_reg_pp0_iter4_r_exp_V_3_reg_996));
    ret_V_2_fu_433_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(tmp_4_fu_408_p4));
    sel_tmp10_fu_747_p2 <= (sel_tmp6_fu_731_p2 or sel_tmp9_fu_741_p2);
    sel_tmp11_fu_858_p2 <= (tmp16_fu_853_p2 and sel_tmp4_fu_842_p2);
    sel_tmp12_fu_753_p2 <= (or_cond_fu_656_p2 xor ap_const_lv1_1);
    sel_tmp13_fu_759_p2 <= (ap_reg_pp0_iter4_tmp_20_reg_982 and sel_tmp12_fu_753_p2);
    sel_tmp14_fu_769_p2 <= (sel_tmp44_demorgan_fu_764_p2 xor ap_const_lv1_1);
    sel_tmp15_fu_775_p2 <= (sel_tmp13_fu_759_p2 or sel_tmp14_fu_769_p2);
    sel_tmp16_fu_889_p2 <= (tmp18_reg_1050 or tmp17_fu_864_p2);
    sel_tmp1_fu_715_p2 <= (ap_reg_pp0_iter4_not_demorgan_reg_932 xor ap_const_lv1_1);
    sel_tmp2_fu_726_p2 <= (tmp_fu_720_p2 and ap_reg_pp0_iter4_tmp_4_i_i_reg_938);
    sel_tmp3_fu_831_p2 <= (x_is_ninf_fu_812_p2 xor ap_const_lv1_1);
    sel_tmp44_demorgan_fu_764_p2 <= (ap_reg_pp0_iter4_tmp_20_reg_982 or icmp_fu_650_p2);
    sel_tmp4_fu_842_p2 <= (tmp15_fu_837_p2 and sel_tmp_fu_826_p2);
    sel_tmp5_fu_848_p2 <= (ap_reg_pp0_iter5_tmp_42_reg_990 xor ap_const_lv1_1);
    sel_tmp6_fu_731_p2 <= (ap_reg_pp0_iter4_tmp_20_reg_982 and or_cond_fu_656_p2);
    sel_tmp7_fu_816_p2 <= (x_is_ninf_fu_812_p2 and sel_tmp1_reg_1038);
    sel_tmp8_fu_736_p2 <= (ap_reg_pp0_iter4_tmp_20_reg_982 xor ap_const_lv1_1);
    sel_tmp9_fu_741_p2 <= (icmp_fu_650_p2 and sel_tmp8_fu_736_p2);
    sel_tmp_fu_826_p2 <= (ap_reg_pp0_iter5_p_Result_s_reg_925 or tmp_4_i_i_not_fu_821_p2);
        sh_assign_1_cast_cas_fu_312_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_1_fu_300_p3),29));

        sh_assign_1_cast_fu_308_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_1_fu_300_p3),32));

    sh_assign_1_fu_300_p3 <= 
        tmp_8_cast_fu_296_p1 when (isNeg_fu_282_p3(0) = '1') else 
        m_exp_fu_242_p2;
    tmp15_fu_837_p2 <= (sel_tmp1_reg_1038 and sel_tmp3_fu_831_p2);
    tmp16_fu_853_p2 <= (sel_tmp10_reg_1044 and sel_tmp5_fu_848_p2);
    tmp17_fu_864_p2 <= (ap_reg_pp0_iter5_tmp_42_reg_990 and sel_tmp10_reg_1044);
    tmp18_fu_781_p2 <= (tmp_22_fu_661_p2 and sel_tmp15_fu_775_p2);
    tmp_10_fu_427_p2 <= "1" when (tmp_38_fu_424_p1 = ap_const_lv15_0) else "0";
    tmp_11_fu_455_p3 <= 
        tmp_2_fu_386_p2 when (isNeg_reg_950(0) = '1') else 
        tmp_3_fu_390_p2;
    tmp_12_fu_462_p3 <= (tmp_11_fu_455_p3 & ap_const_lv4_0);
        tmp_13_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_reg_pp0_iter2_p_Val2_9_reg_961),38));

    tmp_15_fu_497_p3 <= (tmp_14_reg_1008 & ap_const_lv1_0);
    tmp_16_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_V_fu_514_p4),32));
    tmp_17_fu_571_p4 <= hls_exp_reduce_a_1_q0(26 downto 9);
    tmp_18_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hls_exp_reduce_a_1_q0),28));
    tmp_19_fu_604_p3 <= (p_Val2_6_reg_1028 & ap_const_lv17_0);
    tmp_1_i_i_fu_214_p2 <= "0" when (loc_V_1_fu_204_p1 = ap_const_lv23_0) else "1";
    tmp_20_fu_372_p2 <= "1" when (signed(m_exp_fu_242_p2) > signed(ap_const_lv9_0)) else "0";
        tmp_21_cast_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_fu_497_p3),38));

    tmp_21_fu_470_p2 <= "0" when (tmp_12_fu_462_p3 = p_Val2_25_cast1_reg_945) else "1";
    tmp_22_fu_661_p2 <= "1" when (signed(r_exp_V_2_fu_633_p3) < signed(ap_const_lv10_382)) else "0";
    tmp_23_fu_667_p4 <= p_Val2_10_fu_614_p2(42 downto 20);
    tmp_24_fu_677_p4 <= p_Val2_10_fu_614_p2(41 downto 19);
    tmp_25_fu_787_p1 <= p_Result_6_fu_705_p4;
    tmp_26_fu_791_p3 <= 
        ap_const_lv32_7F800000 when (sel_tmp2_fu_726_p2(0) = '1') else 
        ap_const_lv32_7FFFFFFF;
    tmp_27_fu_799_p2 <= (sel_tmp2_fu_726_p2 or ap_reg_pp0_iter4_not_demorgan_reg_932);
    tmp_28_cast_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_1_reg_1033),45));
    tmp_28_fu_804_p3 <= 
        tmp_26_fu_791_p3 when (tmp_27_fu_799_p2(0) = '1') else 
        tmp_25_fu_787_p1;
    tmp_29_fu_868_p3 <= 
        ap_const_lv32_7F800000 when (sel_tmp11_fu_858_p2(0) = '1') else 
        ap_const_lv32_0;
    tmp_2_fu_386_p2 <= std_logic_vector(shift_left(unsigned(tmp_1_reg_966),to_integer(unsigned('0' & sh_assign_1_cast_reg_955(31-1 downto 0)))));
    tmp_30_fu_876_p2 <= (sel_tmp11_fu_858_p2 or sel_tmp7_fu_816_p2);
    tmp_31_fu_882_p3 <= 
        tmp_29_fu_868_p3 when (tmp_30_fu_876_p2(0) = '1') else 
        tmp_28_reg_1055;
    tmp_32_fu_894_p2 <= (sel_tmp16_fu_889_p2 and sel_tmp4_fu_842_p2);
    tmp_37_fu_417_p3 <= grp_fu_908_p3(24 downto 24);
    tmp_38_fu_424_p1 <= grp_fu_908_p3(15 - 1 downto 0);
    tmp_3_fu_390_p2 <= std_logic_vector(shift_right(signed(tmp_1_reg_966),to_integer(unsigned('0' & sh_assign_1_cast_reg_955(31-1 downto 0)))));
    tmp_3_i_i_fu_226_p2 <= "1" when (loc_V_1_fu_204_p1 = ap_const_lv23_0) else "0";
    tmp_40_fu_620_p3 <= p_Val2_10_fu_614_p2(43 downto 43);
    tmp_41_fu_640_p4 <= r_exp_V_2_fu_633_p3(9 downto 7);
    tmp_43_fu_695_p1 <= r_exp_V_2_fu_633_p3(8 - 1 downto 0);
    tmp_4_fu_408_p4 <= grp_fu_908_p3(24 downto 15);
    tmp_4_i_i_fu_232_p2 <= (tmp_i_i_fu_208_p2 and tmp_3_i_i_fu_226_p2);
    tmp_4_i_i_not_fu_821_p2 <= (ap_reg_pp0_iter5_tmp_4_i_i_reg_938 xor ap_const_lv1_1);
        tmp_5_cast_fu_326_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_5_fu_320_p2),36));

    tmp_5_fu_320_p2 <= std_logic_vector(shift_right(signed(p_Val2_18_fu_270_p3),to_integer(unsigned('0' & sh_assign_1_cast_cas_fu_312_p1(29-1 downto 0)))));
    tmp_6_fu_330_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_25_cast1_fu_278_p1),to_integer(unsigned('0' & tmp_9_fu_316_p1(31-1 downto 0)))));
    tmp_6_i_fu_548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_15_reg_1013),19));
    tmp_7_i_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hls_exp_reduce_a_q0),19));
        tmp_8_cast_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_290_p2),9));

    tmp_8_fu_290_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_fu_194_p4));
    tmp_9_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_1_cast_fu_308_p1),36));
    tmp_fu_720_p2 <= (not_Result_i4_fu_599_p2 and sel_tmp1_fu_715_p2);
    tmp_i1_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_ind_V_fu_533_p4),32));
    tmp_i_cast_fu_238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_fu_194_p4),9));
    tmp_i_i_fu_208_p2 <= "1" when (loc_V_fu_194_p4 = ap_const_lv8_FF) else "0";
    tmp_s_fu_397_p3 <= (tmp_36_reg_977 & ap_const_lv15_4000);
    x_is_ninf_fu_812_p2 <= (ap_reg_pp0_iter5_tmp_4_i_i_reg_938 and ap_reg_pp0_iter5_p_Result_s_reg_925);
end behav;
